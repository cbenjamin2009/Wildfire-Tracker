{"version":3,"sources":["Components/locationMarker.js","Components/locationInfoBox.js","Components/map.js","Components/loading.gif","Components/loader.js","Components/header.js","App.js","index.js"],"names":["LocationMarker","lat","lng","onClick","className","icon","locationIcon","locationInfoBox","info","id","title","date","require","config","Map","eventData","center","zoom","useState","locationInfo","setLocationInfo","markers","map","ev","categories","geometries","coordinates","bootstrapURLKeys","key","process","API_KEY","defaultCenter","defaultZoom","defaultProps","loader","src","spinner","alt","nasaIcon","header","App","setEventData","loading","setLoading","useEffect","a","fetch","res","json","events","fetchEvents","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAWeA,EARQ,SAAC,GAAwB,EAAvBC,IAAuB,EAAlBC,IAAmB,IAAdC,EAAa,EAAbA,QAC/B,OACI,qBAAKC,UAAU,kBAAkBD,QAASA,EAA1C,SACI,cAAC,OAAD,CAAME,KAAMC,IAAcF,UAAU,qBCQjCG,EAbS,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACtB,OACI,sBAAKJ,UAAU,gBAAf,UACI,qDACA,+BACI,2CAAa,iCAASI,EAAKC,QAC3B,6CAAe,iCAASD,EAAKE,WAC7B,iDAAmB,iCAASF,EAAKG,iBCJjDC,EAAQ,IAAUC,SAElB,IAAMC,EAAM,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,KAC7B,EAAwCC,mBAAS,MAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAUN,EAAUO,KAAI,SAAAC,GAC1B,OAA2B,IAAxBA,EAAGC,WAAW,GAAGf,GACR,cAAC,EAAD,CAA4BR,IAAKsB,EAAGE,WAAW,GAAGC,YAAY,GAAIxB,IAAKqB,EAAGE,WAAW,GAAGC,YAAY,GAAIvB,QAAS,kBAAMiB,EAAgB,CAACX,GAAIc,EAAGd,GAAIC,MAAOa,EAAGb,MAAOC,KAAMY,EAAGE,WAAW,GAAGd,SAAtKY,EAAGd,IAE7B,QAIX,OACI,sBAAKL,UAAU,MAAf,UACI,cAAC,IAAD,CACIuB,iBAAkB,CAACC,IAAKC,mIAAYC,SACpCC,cAAgBf,EAChBgB,YAAaf,EAHjB,SAKII,IAEHF,GAAgB,cAAC,EAAD,CAAiBX,KAAMW,QAKpDL,EAAImB,aAAe,CACfjB,OAAQ,CACJf,IAAI,QACJC,KAAK,UAETe,KAAM,GAGKH,QCvCA,MAA0B,oC,OCc1BoB,EAVA,WACX,OACI,sBAAK9B,UAAU,SAAf,UACI,qBAAK+B,IAAKC,EAASC,IAAI,YACvB,qDAAuB,cAAC,OAAD,CAAMhC,KAAMiC,aCMhCC,EATA,WACX,OACG,wBAAQnC,UAAU,SAAlB,SACI,+BAAI,cAAC,OAAD,CAAMC,KAAMC,MAAhB,iCAA8D,cAAC,OAAD,CAAMD,KAAMiC,MAA1E,WC2BIE,MA9Bf,WAEE,MAAkCtB,mBAAS,IAA3C,mBAAOH,EAAP,KAAkB0B,EAAlB,KACA,EAA8BvB,oBAAS,GAAvC,mBAAOwB,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAC,qBAAU,YACS,uCAAG,gCAAAC,EAAA,6DAClBF,GAAW,GADO,SAEAG,MAAM,mDAFN,cAEZC,EAFY,gBAKOA,EAAIC,OALX,gBAKVC,EALU,EAKVA,OAGRR,EAAaQ,GACbN,GAAW,GATO,4CAAH,qDAYjBO,KACC,IAID,gCACE,cAAC,EAAD,IACER,EAA0C,cAAC,EAAD,IAAhC,cAAC,EAAD,CAAK3B,UAAWA,QCzBlCoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2fb06195.chunk.js","sourcesContent":["import {Icon} from '@iconify/react'\r\nimport locationIcon from '@iconify/icons-mdi/fire-alert'\r\n\r\nconst LocationMarker = ({lat, lng, onClick}) => {\r\n    return (\r\n        <div className=\"location-marker\" onClick={onClick}>\r\n            <Icon icon={locationIcon} className=\"location-icon\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LocationMarker\r\n","\r\nconst locationInfoBox = ({info}) => {\r\n    return (\r\n        <div className=\"location-info\">\r\n            <h2>Event Location Info</h2>\r\n            <ul>\r\n                <li>Fire ID: <strong>{info.id}</strong></li>\r\n                <li>Fire Name: <strong>{info.title}</strong></li>\r\n                <li>Date Recorded: <strong>{info.date}</strong></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default locationInfoBox\r\n","import {useState} from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport LocationMarker from './locationMarker';\r\nimport LocationInfoBox from './locationInfoBox';\r\nrequire('dotenv').config();\r\n\r\nconst Map = ({eventData, center, zoom}) => {\r\n    const [locationInfo, setLocationInfo] = useState(null)\r\n\r\n    const markers = eventData.map(ev => {\r\n        if(ev.categories[0].id === 8){\r\n            return  <LocationMarker key={ev.id} lat={ev.geometries[0].coordinates[1]} lng={ev.geometries[0].coordinates[0]} onClick={() => setLocationInfo({id: ev.id, title: ev.title, date: ev.geometries[0].date})} />\r\n        }\r\n        return null\r\n    })\r\n\r\n\r\n    return (\r\n        <div className=\"map\">\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{key: process.env.API_KEY}}\r\n                defaultCenter={ center}\r\n                defaultZoom={zoom}\r\n            >\r\n               {markers}\r\n            </GoogleMapReact>\r\n            {locationInfo && <LocationInfoBox info={locationInfo} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nMap.defaultProps = {\r\n    center: {\r\n        lat:42.3265,\r\n        lng:-122.8756\r\n    },\r\n    zoom: 6\r\n}\r\n\r\nexport default Map\r\n","export default __webpack_public_path__ + \"static/media/loading.20e5c8b9.gif\";","import spinner from './loading.gif'\r\nimport {Icon} from '@iconify/react'\r\nimport nasaIcon from '@iconify-icons/simple-icons/nasa';\r\n\r\nconst loader = () => {\r\n    return (\r\n        <div className=\"loader\">\r\n            <img src={spinner} alt=\"Loading\"/>\r\n            <h1>Fetching Data from <Icon icon={nasaIcon}/></h1>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default loader\r\n","import {Icon} from '@iconify/react'\r\nimport locationIcon from '@iconify/icons-mdi/fire-alert'\r\nimport nasaIcon from '@iconify-icons/simple-icons/nasa';\r\n\r\n\r\nconst header = () => {\r\n    return (\r\n       <header className=\"header\">\r\n           <h1><Icon icon={locationIcon} /> Wildfire Tracker (Powered by <Icon icon={nasaIcon}/>) </h1>\r\n\r\n       </header>\r\n    )\r\n}\r\n\r\nexport default header\r\n","import {useState, useEffect} from 'react'\r\nimport Map from './Components/map'\r\nimport Loader from './Components/loader'\r\nimport Header from './Components/header'\r\n\r\nfunction App() {\r\n\r\n  const [eventData, setEventData] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  useEffect(()=> {\r\n    const fetchEvents = async () => {\r\n      setLoading(true)\r\n      const res = await fetch('https://eonet.sci.gsfc.nasa.gov/api/v2.1/events')\r\n      // in the API we only care about the data within \"events\" section so using destructuring \r\n      // we can pull just the events into res.json() \r\n      const { events } = await res.json()\r\n\r\n      //set event data to that destructured event data \r\n      setEventData(events)\r\n      setLoading(false)\r\n\r\n    }\r\n    fetchEvents() \r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      {!loading ? <Map eventData={eventData} /> : <Loader />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}